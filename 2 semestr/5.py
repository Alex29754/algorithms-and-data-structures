def bad_character_table(pattern):
    """–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É '–ø–ª–æ—Ö–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤'."""
    bad_char = {}
    length = len(pattern)

    for i in range(length - 1):
        bad_char[pattern[i]] = length - 1 - i

    return bad_char


def boyer_moore_search(text, pattern):
    """–ê–ª–≥–æ—Ä–∏—Ç–º –ë–æ–π–µ—Ä–∞-–ú—É—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—Ä–∞–∑—Ü–∞ –≤ —Å—Ç—Ä–æ–∫–µ."""
    m, n = len(pattern), len(text)

    if m > n:
        return -1  # –û–±—Ä–∞–∑–µ—Ü –¥–ª–∏–Ω–Ω–µ–µ —Ç–µ–∫—Å—Ç–∞

    bad_char = bad_character_table(pattern)

    shift = 0  # –°–¥–≤–∏–≥ –æ–±—Ä–∞–∑—Ü–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—Å—Ç–∞

    while shift <= n - m:
        j = m - 1  # –ò–Ω–¥–µ–∫—Å –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤

        while j >= 0 and pattern[j] == text[shift + j]:
            j -= 1

        if j < 0:
            return shift  # –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ

        # –í—ã—á–∏—Å–ª—è–µ–º —Å–¥–≤–∏–≥ –ø–æ —ç–≤—Ä–∏—Å—Ç–∏–∫–µ "–ø–ª–æ—Ö–æ–≥–æ —Å–∏–º–≤–æ–ª–∞"
        bad_char_shift = bad_char.get(text[shift + j], m)
        shift += bad_char_shift  # –î–≤–∏–≥–∞–µ–º –æ–±—Ä–∞–∑–µ—Ü –≤–ø—Ä–∞–≤–æ

    return -1  # –û–±—Ä–∞–∑–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω


# üîπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
text = "HERE IS A SIMPLE EXAMPLE"
pattern = "EXAMPLE"

index = boyer_moore_search(text, pattern)
print(f"–û–±—Ä–∞–∑–µ—Ü –Ω–∞–π–¥–µ–Ω –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏: {index}" if index != -1 else "–û–±—Ä–∞–∑–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω")
